#!/bin/bash --norc

# Copyright (c) 2015, the Dart Team. All rights reserved. Use of this
# source code is governed by a BSD-style license that can be found in
# the LICENSE file.

function run_dart2js {
  echo "---------- $(basename $2)"
  if dart2js $3 -o ${2%%.dart}$3.js --package-root="$1/test/packages" $2; then
    true
  else
    SUMMARY="$SUMMARY
  $2"
  fi
}

SUMMARY=""
OUTPUT="./measure_output-`date +%Y%m%d-%H%M`.txt"

while [ "$#" -gt 0 ]; do
  if [ "$1" = "--help" ]; then
    echo "Usage: $0 {<option>}, where <option>s are chosen among these:"
    echo "  --include-js: generate and measure sizes of the JavaScript output"
    echo "  --include-source-tree: include 'test' as well as 'build/test'"
    echo "  --include-unminified: include unminified output as well as minified"
    exit 0;
  fi

  if [ "$1" = "--include-js" ]; then
    include_js="yes"
    shift
  fi

  if [ "$1" = "--include-source-tree" ]; then
    include_source_tree="yes"
    shift
  fi

  if [ "$1" = "--include-unminified" ]; then
    include_unminified="yes"
    shift
  fi
done

if [ -n "$include_js" ]; then
  if [ -n "$include_source_tree" ]; then
    for n in ../test/*_test.dart; do run_dart2js .. $n -m; done
    if [ -n "$include_unminified" ]; then
      for n in ../test/*_test.dart; do run_dart2js .. $n ""; done
    fi
  fi
  for n in ../build/test/*_test.dart; do run_dart2js ../build $n -m; done
  if [ -n "$include_unminified" ]; then
    for n in ../build/test/*_test.dart; do run_dart2js ../build $n ""; done
  fi
  EXTENSION="{dart,js}"
else
  EXTENSION="dart"
fi

echo "---------- Failed compilations:$SUMMARY"

if [ -n "$include_source_tree" ]; then
  if [ -n "$include_js" ]; then
    wc {..,../build}/test/*.{dart,js}
  else
    wc {..,../build}/test/*.dart
  fi
else
  if [ -n "$include_js" ]; then
    wc ../build/test/*.{dart,js}
  else
    wc ../build/test/*.dart
  fi
fi | tee $OUTPUT
echo "less $OUTPUT"
read
less $OUTPUT

